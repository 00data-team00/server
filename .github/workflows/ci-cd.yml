name: CI/CD Pipeline

on:
  push:
    branches:
      - "main"

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # ① application-secret.yml 생성
      - name: application-secret.yml 생성
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_SECRET_YML }}" > src/main/resources/application-secret.yml
        env:
          APPLICATION_SECRET_YML: ${{ secrets.APPLICATION_SECRET_YML }}

      - name: Java 21 설정
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'

      - name: JAR 빌드 (테스트 제외)
        run: ./gradlew clean build -x test

      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 도커 이미지 빌드 & 푸시
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/data00:latest

  deploy:
    name: Deploy to EC2 via SSH
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH 키 설정
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.PRIVATE_KEY }}

#      - name: known_hosts 등록 (옵션)
#        run: |
#          mkdir -p ~/.ssh
#          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      - name: 배포 스크립트 실행
        uses: appleboy/ssh-action@v0.8.0
        with:
          host: ${{ secrets.EC2_HOST }}
          user: ${{ secrets.EC2_USER }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /home/ec2-user${{ secrets.EC2_USER }}
            docker-compose pull
            docker-compose up -d
